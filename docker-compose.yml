version: '3.9'

services:
  postgres:
    image: postgres:15.0
    environment:
      POSTGRES_DB: duckcloud
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    networks:
      - duckcloud-network
    volumes:
      - duckcloud_postgres_data:/var/lib/postgresql/data

  postgres_kc:
    image: postgres:15.0
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - duckcloud-network
    volumes:
      - keycloak-demo_postgres_data:/var/lib/postgresql/data
      - ./data/keycloak-demo/keycloak/db/:/docker-entrypoint-initdb.d/

  postgres_casbin:
    image: postgres:15.4
    environment:
      POSTGRES_DB: casbin
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    networks:
      - duckcloud-network
    volumes:
      - casbin_postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2023-01-20T02-05-44Z.fips
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin@secret
    command: server --console-address ":9001" /data
    networks:
      - duckcloud-network

  elasticsearch:
    image: elasticsearch:7.17.3
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      # ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    networks:
      - duckcloud-network
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: kibana:7.17.3
    container_name: kibana
    ports:
      - 5601:5601
      - 9600:9600
    environment:
      ES_JAVA_OPTS: -Xmx512m -Xms512m
      SERVERNAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      # ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}
    networks:
      - duckcloud-network
    volumes:
      - kibana_data:/usr/share/kibana/data

  keycloak:
    image: keycloak/keycloak:22.0.5
    environment:
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_HOST: postgres_kc
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT: "false"
      #KC_LOG_LEVEL: DEBUG
    ports:
      - 8080:8080
    entrypoint: /opt/keycloak/bin/kc.sh start-dev
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
    depends_on:
      - postgres_kc
      - openldap
    networks:
      - duckcloud-network

  openldap:
    image: docker.io/bitnami/openldap:2.6
    environment:
      LDAP_ROOT: dc=trodix,dc=com
      LDAP_ADMIN_USERNAME: admin
      LDAP_ADMIN_PASSWORD: admin
      LDAP_CUSTOM_LDIF_DIR: /ldifs
    ports:
      - 1389:1389
      - 1636:1636
    networks:
      - duckcloud-network
    volumes:
      - openldap_data:/bitnami/openldap
      - ./ldap/bootstrap:/ldifs

  smtp4dev:
    image: rnwood/smtp4dev:v3
    ports:
      - 1080:80
      - 127.0.0.1:1025:25
      - 143:143
    volumes:
      - smtp4dev-data:/smtp4dev

  casbin-server:
    image: ghcr.io/trodix/casbin-server:0.0.1-snapshot
    ports:
      - 7015:7015
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_casbin:5432/casbin
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI: http://trodix.local:8080/realms/market
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_MARKET_TOKENURI: http://trodix.local:8080/realms/market/protocol/openid-connect/token
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MARKET_AUTHORIZATIONGRANTTYPE: client_credentials
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MARKET_CLIENTID: duckcloud-webservice
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_MARKET_CLIENTSECRET: QOUUWPnujmoFwpiTduxjCD7yAhpdl8Jj
      APP_AUTH_ALLOWED_ORIGINS: "*"
    networks:
      - duckcloud-network

#####################################
### OnlyOffice server services below

  onlyoffice-documentserver:
    image: onlyoffice/documentserver:7.3.2.8
    container_name: onlyoffice-documentserver
    depends_on:
      - onlyoffice-postgresql
      - onlyoffice-rabbitmq
    environment:
      - DB_TYPE=postgres
      - DB_HOST=onlyoffice-postgresql
      - DB_PORT=5432
      - DB_NAME=onlyoffice
      - DB_USER=onlyoffice
      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq
      # Uncomment strings below to enable the JSON Web Token validation.
      - JWT_ENABLED=true
      - JWT_SECRET=WlEJf7hdzCEGwTWkO89i
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=false
      - WOPI_ENABLED=true
    ports:
      - '6080:80'
      - '6443:443'
    stdin_open: true
    stop_grace_period: 60s
    volumes:
      - DocumentServer_log:/var/log/onlyoffice
      - DocumentServer_data:/var/www/onlyoffice/Data
      - DocumentServer_lib_oo:/var/lib/onlyoffice
      - DocumentServer_lib_postgresql:/var/lib/postgresql
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - duckcloud-network

  onlyoffice-rabbitmq:
    container_name: onlyoffice-rabbitmq
    image: rabbitmq
    #restart: always
    expose:
      - '5672'
    networks:
      - duckcloud-network

  onlyoffice-postgresql:
    container_name: onlyoffice-postgresql
    image: postgres:9.5
    environment:
      POSTGRES_DB: onlyoffice
      POSTGRES_USER: onlyoffice
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - onlyoffice_postgresql_data:/var/lib/postgresql
    networks:
      - duckcloud-network

networks:
  duckcloud-network:
    driver: bridge

volumes:
  duckcloud_postgres_data:
  keycloak-demo_postgres_data:
  casbin_postgres_data:
  elasticsearch_data:
  kibana_data:
  openldap_data:
  smtp4dev-data:
  onlyoffice_postgresql_data:
  DocumentServer_log:
  DocumentServer_data:
  DocumentServer_lib_oo:
  DocumentServer_lib_postgresql:
